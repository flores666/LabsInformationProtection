@using lib.Labs.Encryptors.Interfaces
@model InputModel

@{
    var currentLab = labsContext.LabType;
    ViewData["Title"] = currentLab;
}

<script>
$(document).ready(function() {
    let isDecryptPressed;
    let decryptBtn = $('#decrypt');
    
        $('#clear').click(function (){
            document.querySelectorAll('input').forEach(function (input) {
                input.value = '';
                isDecryptPressed = false;
            });
            
            document.querySelectorAll('textarea').forEach(function (input) {
                input.value = '';
                isDecryptPressed = false;
            });
            
            document.querySelectorAll('span').forEach(function (input) {
                input.innerText = '';
                isDecryptPressed = false;
            });
            
            decryptBtn.prop('disabled', true);
        });
        
        $('#encrypt, #decrypt').click(function () {
            let input;
            let key = $('#key').val();
            let container = $('#container').val();
            
            if (this.id == 'decrypt') {
                input = document.getElementById('output').value;
                isDecryptPressed = true;
                decryptBtn.prop('disabled', true);
            }
            else {
                input = document.getElementById('input').value;
                isDecryptPressed = false;
            }
            
            $.ajax({
                url: "/@ViewContext.RouteData.Values["Controller"]/Index",
                type: "POST",
                data: { 
                    model : { Input : input, Key : key, Container : container },
                    IsDecryptPressed : isDecryptPressed
                },
                dataType: "json",
                success: function (json) {
                    if (json.error == null) {
                        document.getElementById('input').value = json.input;
                        document.getElementById('output').value = json.output;
                        if (!isDecryptPressed) decryptBtn.prop('disabled', false);
                    }
                    else {
                        $('#shared-span').text(json.error);
                    }
                }
            });
        });
        
        if ('@string.IsNullOrEmpty(labsContext.LabProperties.KeyPattern)' === 'True') {
            $('.form-key').remove();
        }
        
        $('#container').val("Этот контейнер состоит из нескольких предложений.\n" +
         "Здесь мы можем увидеть, как каждое предложение заканчивается точкой.\n" +
          "Это третье предложение, за которым следует восклицательный знак!\n" +
           "И еще одно предложение, оканчивающееся вопросительным знаком?\n" +
            "Еще одно предложение чтобы размер контейнера был побольше.\n" +
             "Напоминаю! Все! Абсолютно все предложения заканчиваются знаками препинания!\n" +
              "Либо точка, либо восклицательный, либо вопросительный знак.\n" +
               "Наконец, последнее предложение. Конец!\n" + 
               "Этот контейнер состоит из нескольких предложений.\n" +
                        "Здесь мы можем увидеть, как каждое предложение заканчивается точкой.\n" +
                         "Это третье предложение, за которым следует восклицательный знак!\n" +
                          "И еще одно предложение, оканчивающееся вопросительным знаком?\n" +
                           "Еще одно предложение чтобы размер контейнера был побольше.\n" +
                            "Напоминаю! Все! Абсолютно все предложения заканчиваются знаками препинания!\n" +
                             "Либо точка, либо восклицательный, либо вопросительный знак.\n" +
                              "Наконец, последнее предложение. Конец!\n" +
                              "Этот контейнер состоит из нескольких предложений.\n" +
                                       "Здесь мы можем увидеть, как каждое предложение заканчивается точкой.\n" +
                                        "Это третье предложение, за которым следует восклицательный знак!\n" +
                                         "И еще одно предложение, оканчивающееся вопросительным знаком?\n" +
                                          "Еще одно предложение чтобы размер контейнера был побольше.\n" +
                                           "Напоминаю! Все! Абсолютно все предложения заканчиваются знаками препинания!\n" +
                                            "Либо точка, либо восклицательный, либо вопросительный знак.\n" +
                                             "Наконец, последнее предложение. Конец!\n" + 
                                             "Этот контейнер состоит из нескольких предложений.");

        $('#generateKey').click(function () {
            $.ajax({
                url: "/@ViewContext.RouteData.Values["Controller"]/GenerateKey",
                type: "POST",
                success: function (key) {
                    if($('#key').value != null) $('#key').value.clear();
                    document.getElementById('key').value = key;
                }
            });
        });
        
        $('.auto-height').on('input', function() {
              autoResizeTextarea(this);
            });
        
            function autoResizeTextarea(textarea) {
               $('.auto-height').each(function () {
                   this.style.height = 'auto';
                   this.style.height = (textarea.scrollHeight) + 'px';
               });
            }
        });
</script>

<div class="container">
    <div class="header">
        <h1>@ViewData["Header"]</h1>
    </div>
    <form class="form">
        <span id="shared-span" class="text-danger d-flex start-0 pb-1"></span>

        <div class="inputs">
            <div class="form-key">
                <input id="key" asp-for="Key" autocomplete="off">
                <label asp-for="Key"></label>
                <span asp-validation-for="Key" class="text-danger"></span>
            </div>

            @if (ViewBag.CanGenerateKey == true)
            {
                <div class="generate-key">
                    <button type="button" id="generateKey">Сгенерировать Ключ</button>
                </div>
            }

            @if (ViewBag.IsSteganography)
            {
                <div class="form-input col">
                    <textarea rows="6" class="auto-height" id="container" asp-for="Container"></textarea>
                    <label asp-for="Container"></label>
                    <span asp-validation-for="Container" class="text-danger"></span>
                </div>
            }

            @if (ViewBag.IsSteganographyBits)
            {
                <div class="form-input col">
                    <input id="bits" asp-for="Bits">
                    <label asp-for="Bits"></label>
                    <span asp-validation-for="Bits" class="text-danger"></span>
                </div>
            }

            <div class="row pb-4 pt-3">
                <div class="form-input col">
                    <textarea rows="6" id="input" class="auto-height" asp-for="Input"></textarea>
                    <label asp-for="Input"></label>
                    <span id="input-span" asp-validation-for="Input" class="text-danger"></span>
                </div>

                <div class="form-output col">
                    <textarea rows="6" id="output" class="auto-height" asp-for="Output" disabled></textarea>
                    <label asp-for="Output"></label>
                </div>
            </div>
        </div>

        <div class="buttons">
            <div class="row">
                <button type="button" class="col border-0" id="encrypt">Зашифровать</button>
                <button type="button" class="col border-0" id="decrypt" disabled>Расшифровать</button>
                <button type="button" class="col-1 border-0" id="clear">
                    <img src="assets/trash.svg" alt="X">
                </button>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial"/>
}